{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis of demon output with signatures"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Analysing output.dat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Generation  NumCells  S1(MeanNum)  S2(MeanNum)  S3(MeanNum)\n",
      "0     0.000000         1     0.000000     0.000000     0.000000\n",
      "1     1.001001         2     5.000000     6.500000     0.000000\n",
      "2     2.003552        14    12.071428    13.071428     0.000000\n",
      "3     3.006187        27    18.592592    19.074074     4.185185\n",
      "4     4.009290        33    20.393940    19.939394     6.787879\n",
      "5     5.009604        44    28.727272    27.613636    10.886364\n",
      "6     6.009659        54    33.388889    31.685184    13.574074\n",
      "7     7.010575        80    40.075001    37.337502    17.812500\n",
      "8     8.011157       136    44.485294    44.139706    22.272058\n",
      "9     9.013647       203    49.847290    47.743843    24.463055\n",
      "10   10.013690       294    55.265305    53.595238    29.204082\n",
      "11   11.013844       371    61.687332    59.536388    34.404312\n",
      "12   12.015547       436    68.550461    65.944954    39.327980\n",
      "13   13.015772       470    75.795746    73.342552    45.599998\n",
      "14   14.018333       487    83.248459    79.817245    50.396305\n",
      "15   15.018461       504    91.950394    85.462303    55.908730\n",
      "16   16.020525       512   102.806641    96.904297    63.474609\n",
      "17   17.021463       513   117.077972   109.746590    73.031189\n",
      "18   18.022131       513   135.259262   125.666664    86.070175\n",
      "19   19.022350       513   159.003906   148.539963   107.746590\n",
      "20   20.000216       513   177.654968   168.643280   124.947365\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "output = pd.read_csv(\"../prog/output_data/output.dat\", sep='\\t')\n",
    "#print(output[['Generation', 'NumCells', 'S1(MeanNum)', 'S2(MeanNum)', 'S3(MeanNum)']])\n",
    "\n",
    "plt.plot(output['Generation'], output['NumCells'])\n",
    "plt.title('Generation vs number of cells')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in ['S1(MeanNum)', 'S2(MeanNum)', 'S3(MeanNum)'] :\n",
    "    plt.plot(output['Generation'], output[i])\n",
    "plt.title('Generation vs mean number of S3')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Analysing Clones.dat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Generation</th>\n",
       "      <th>Clone</th>\n",
       "      <th>Deme</th>\n",
       "      <th>Genotype</th>\n",
       "      <th>DriverGenotype</th>\n",
       "      <th>Parent</th>\n",
       "      <th>DriverParent</th>\n",
       "      <th>X</th>\n",
       "      <th>Y</th>\n",
       "      <th>NormalCells</th>\n",
       "      <th>...</th>\n",
       "      <th>BirthRate</th>\n",
       "      <th>MigrationRate</th>\n",
       "      <th>DeathRate</th>\n",
       "      <th>MigrationModifier</th>\n",
       "      <th>DriverMutations</th>\n",
       "      <th>MigrationMutations</th>\n",
       "      <th>PassengerMutations</th>\n",
       "      <th>S1Mutations</th>\n",
       "      <th>S2Mutations</th>\n",
       "      <th>S3Mutations</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.00000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>72</td>\n",
       "      <td>72</td>\n",
       "      <td>511</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000088</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001953</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.01369</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1136</td>\n",
       "      <td>9</td>\n",
       "      <td>964</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>72</td>\n",
       "      <td>218</td>\n",
       "      <td>...</td>\n",
       "      <td>1.589032</td>\n",
       "      <td>0.000088</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.574219</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>136</td>\n",
       "      <td>59</td>\n",
       "      <td>55</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10.01369</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1527</td>\n",
       "      <td>6</td>\n",
       "      <td>1249</td>\n",
       "      <td>4</td>\n",
       "      <td>72</td>\n",
       "      <td>72</td>\n",
       "      <td>218</td>\n",
       "      <td>...</td>\n",
       "      <td>1.407952</td>\n",
       "      <td>0.000088</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.574219</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>146</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10.01369</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>1918</td>\n",
       "      <td>0</td>\n",
       "      <td>72</td>\n",
       "      <td>72</td>\n",
       "      <td>218</td>\n",
       "      <td>...</td>\n",
       "      <td>1.262540</td>\n",
       "      <td>0.000088</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.574219</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113</td>\n",
       "      <td>48</td>\n",
       "      <td>39</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10.01369</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1417</td>\n",
       "      <td>6</td>\n",
       "      <td>1390</td>\n",
       "      <td>4</td>\n",
       "      <td>72</td>\n",
       "      <td>72</td>\n",
       "      <td>218</td>\n",
       "      <td>...</td>\n",
       "      <td>1.407952</td>\n",
       "      <td>0.000088</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.574219</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>134</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Generation  Clone  Deme  Genotype  DriverGenotype  Parent  DriverParent  \\\n",
       "0     0.00000      0     0         0               0       0             0   \n",
       "1    10.01369      0     0      1136               9     964             1   \n",
       "2    10.01369      1     0      1527               6    1249             4   \n",
       "3    10.01369      2     0      2015               3    1918             0   \n",
       "4    10.01369      3     0      1417               6    1390             4   \n",
       "\n",
       "    X   Y  NormalCells  ...  BirthRate  MigrationRate  DeathRate  \\\n",
       "0  72  72          511  ...   1.000000       0.000088        0.0   \n",
       "1  72  72          218  ...   1.589032       0.000088        0.0   \n",
       "2  72  72          218  ...   1.407952       0.000088        0.0   \n",
       "3  72  72          218  ...   1.262540       0.000088        0.0   \n",
       "4  72  72          218  ...   1.407952       0.000088        0.0   \n",
       "\n",
       "   MigrationModifier  DriverMutations  MigrationMutations  PassengerMutations  \\\n",
       "0           0.001953                0                   0                   0   \n",
       "1           0.574219                2                   0                 136   \n",
       "2           0.574219                3                   0                 146   \n",
       "3           0.574219                1                   0                 113   \n",
       "4           0.574219                3                   0                 134   \n",
       "\n",
       "   S1Mutations  S2Mutations  S3Mutations  \n",
       "0            0            0            0  \n",
       "1           59           55           24  \n",
       "2           59           59           31  \n",
       "3           48           39           27  \n",
       "4           59           46           32  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clones = pd.read_csv(\"../prog/output_data/clones.dat\", sep='\\t')\n",
    "## print(clones[['Generation', 'NumCells', 'S1(MeanNum)', 'S2(MeanNum)', 'S3(MeanNum)']])\n",
    "clones.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Make sure that the number of signature-specific mutations are the same as the new passenger and driver mutations. Migration mutations are so far put to zero, but if there were some I would have to rethingk the code: I don't think they would have to be attributed from the signature-specific mutations but from already-drawn mutations, which might make everything much more difficult."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.all(np.sum(clones[['S1Mutations', 'S2Mutations', 'S3Mutations']], axis=1) == np.sum(clones[['DriverMutations', 'MigrationMutations', 'PassengerMutations']], axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for i in ['S1Mutations', 'S2Mutations', 'S3Mutations'] :\n",
    "    plt.bar(range(clones.shape[0]), clones[i])\n",
    "plt.show()\n",
    "\n",
    "## normalised version\n",
    "## there must be an error here\n",
    "clones_norm = clones\n",
    "clones_norm[['S1Mutations', 'S2Mutations', 'S3Mutations']] = clones[['S1Mutations', 'S2Mutations', 'S3Mutations']]/np.sum(clones[['S1Mutations', 'S2Mutations', 'S3Mutations']], axis=1)[:, np.newaxis]\n",
    "for i in ['S1Mutations', 'S2Mutations', 'S3Mutations'] :\n",
    "    plt.bar(range(clones.shape[0]), clones[i]/np.sum(clones[['S1Mutations', 'S2Mutations', 'S3Mutations']], axis=1))\n",
    "plt.show()\n",
    "    \n",
    "for i in ['S1Mutations', 'S2Mutations', 'S3Mutations'] :\n",
    "    plt.bar(range(clones_norm.shape[0]), clones_norm[i])\n",
    "plt.show()\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S1Mutations</th>\n",
       "      <th>S2Mutations</th>\n",
       "      <th>S3Mutations</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>59</td>\n",
       "      <td>55</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48</td>\n",
       "      <td>39</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>61</td>\n",
       "      <td>71</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>65</td>\n",
       "      <td>56</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>53</td>\n",
       "      <td>55</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>58</td>\n",
       "      <td>54</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>73</td>\n",
       "      <td>62</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>48</td>\n",
       "      <td>61</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>59</td>\n",
       "      <td>45</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>39</td>\n",
       "      <td>41</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>50</td>\n",
       "      <td>52</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>48</td>\n",
       "      <td>54</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>48</td>\n",
       "      <td>59</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>56</td>\n",
       "      <td>64</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>43</td>\n",
       "      <td>39</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>59</td>\n",
       "      <td>43</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>62</td>\n",
       "      <td>59</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>51</td>\n",
       "      <td>58</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>47</td>\n",
       "      <td>41</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>55</td>\n",
       "      <td>27</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>35</td>\n",
       "      <td>28</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>55</td>\n",
       "      <td>68</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>51</td>\n",
       "      <td>73</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>51</td>\n",
       "      <td>38</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>44</td>\n",
       "      <td>50</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>67</td>\n",
       "      <td>62</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>778</th>\n",
       "      <td>179</td>\n",
       "      <td>169</td>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>779</th>\n",
       "      <td>176</td>\n",
       "      <td>187</td>\n",
       "      <td>134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>780</th>\n",
       "      <td>173</td>\n",
       "      <td>165</td>\n",
       "      <td>117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>781</th>\n",
       "      <td>190</td>\n",
       "      <td>170</td>\n",
       "      <td>124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>782</th>\n",
       "      <td>170</td>\n",
       "      <td>178</td>\n",
       "      <td>126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>783</th>\n",
       "      <td>190</td>\n",
       "      <td>169</td>\n",
       "      <td>124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>784</th>\n",
       "      <td>221</td>\n",
       "      <td>193</td>\n",
       "      <td>149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>785</th>\n",
       "      <td>200</td>\n",
       "      <td>184</td>\n",
       "      <td>138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>786</th>\n",
       "      <td>163</td>\n",
       "      <td>157</td>\n",
       "      <td>113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>787</th>\n",
       "      <td>181</td>\n",
       "      <td>165</td>\n",
       "      <td>121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>788</th>\n",
       "      <td>178</td>\n",
       "      <td>168</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>789</th>\n",
       "      <td>171</td>\n",
       "      <td>165</td>\n",
       "      <td>117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>790</th>\n",
       "      <td>181</td>\n",
       "      <td>163</td>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>791</th>\n",
       "      <td>176</td>\n",
       "      <td>156</td>\n",
       "      <td>124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>792</th>\n",
       "      <td>166</td>\n",
       "      <td>157</td>\n",
       "      <td>110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>793</th>\n",
       "      <td>172</td>\n",
       "      <td>144</td>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>794</th>\n",
       "      <td>165</td>\n",
       "      <td>169</td>\n",
       "      <td>116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>795</th>\n",
       "      <td>222</td>\n",
       "      <td>189</td>\n",
       "      <td>149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>796</th>\n",
       "      <td>185</td>\n",
       "      <td>169</td>\n",
       "      <td>124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>797</th>\n",
       "      <td>176</td>\n",
       "      <td>161</td>\n",
       "      <td>124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>798</th>\n",
       "      <td>157</td>\n",
       "      <td>166</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>799</th>\n",
       "      <td>184</td>\n",
       "      <td>182</td>\n",
       "      <td>132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>800</th>\n",
       "      <td>180</td>\n",
       "      <td>166</td>\n",
       "      <td>123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>801</th>\n",
       "      <td>144</td>\n",
       "      <td>155</td>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>802</th>\n",
       "      <td>164</td>\n",
       "      <td>164</td>\n",
       "      <td>120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>803</th>\n",
       "      <td>164</td>\n",
       "      <td>127</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>804</th>\n",
       "      <td>172</td>\n",
       "      <td>162</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>805</th>\n",
       "      <td>189</td>\n",
       "      <td>187</td>\n",
       "      <td>126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>806</th>\n",
       "      <td>173</td>\n",
       "      <td>177</td>\n",
       "      <td>145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>807</th>\n",
       "      <td>154</td>\n",
       "      <td>153</td>\n",
       "      <td>126</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>808 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     S1Mutations  S2Mutations  S3Mutations\n",
       "0              0            0            0\n",
       "1             59           55           24\n",
       "2             59           59           31\n",
       "3             48           39           27\n",
       "4             59           46           32\n",
       "5             61           71           30\n",
       "6             65           56           38\n",
       "7             53           55           30\n",
       "8             58           54           30\n",
       "9             73           62           30\n",
       "10            48           61           27\n",
       "11            59           45           26\n",
       "12            39           41           21\n",
       "13            50           52           14\n",
       "14            48           54           27\n",
       "15            49           48           22\n",
       "16            48           59           28\n",
       "17            56           64           28\n",
       "18            43           39           24\n",
       "19            59           43           30\n",
       "20            62           59           31\n",
       "21            51           58           39\n",
       "22            47           41           25\n",
       "23            55           27           24\n",
       "24            35           28           17\n",
       "25            55           68           31\n",
       "26            51           73           33\n",
       "27            51           38           26\n",
       "28            44           50           14\n",
       "29            67           62           26\n",
       "..           ...          ...          ...\n",
       "778          179          169          119\n",
       "779          176          187          134\n",
       "780          173          165          117\n",
       "781          190          170          124\n",
       "782          170          178          126\n",
       "783          190          169          124\n",
       "784          221          193          149\n",
       "785          200          184          138\n",
       "786          163          157          113\n",
       "787          181          165          121\n",
       "788          178          168          128\n",
       "789          171          165          117\n",
       "790          181          163          119\n",
       "791          176          156          124\n",
       "792          166          157          110\n",
       "793          172          144          119\n",
       "794          165          169          116\n",
       "795          222          189          149\n",
       "796          185          169          124\n",
       "797          176          161          124\n",
       "798          157          166          128\n",
       "799          184          182          132\n",
       "800          180          166          123\n",
       "801          144          155           83\n",
       "802          164          164          120\n",
       "803          164          127           92\n",
       "804          172          162          125\n",
       "805          189          187          126\n",
       "806          173          177          145\n",
       "807          154          153          126\n",
       "\n",
       "[808 rows x 3 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.clones[['S1Mutations', 'S2Mutations', 'S3Mutations']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
